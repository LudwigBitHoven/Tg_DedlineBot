import telebot
import gspread
import json
import validators
import pandas as pd
from datetime import datetime, timedelta

bot = telebot.TeleBot('5256096678:AAEhgJPBAaGVk07IUjd4YBfocxt9Qul6wKg')


def convert_date(date: str = "01/01/2000"):
    """ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –∏–∑ —Å—Ç—Ä–æ–∫–∏ –≤ datetime """
    dt = datetime.strptime(date, "%d/%m/%y") + timedelta(days=1)
    today = datetime.today()
    delta = dt - today
    if dt >= today and delta.days <= 7:
        return True
    else:
        return False


def connect_table(message):
    """ –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Google-—Ç–∞–±–ª–∏—Ü–µ """
    url = message.text
    idsheet = url.split('/')[-2]  # –ù—É–∂–Ω–æ –∏–∑–≤–ª–µ—á—å id —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–∑ —Å—Å—ã–ª–∫–∏ –Ω–∞ Google-—Ç–∞–±–ª–∏—Ü—É
    try:
        with open("tables.json") as json_file:
            tables = json.load(json_file)
        title = len(tables) + 1
        tables[title] = {"url": url, "id": idsheet}
    except FileNotFoundError:
        tables = {0: {"url": url, "id": idsheet}}
    with open('tables.json', 'w') as json_file:
        json.dump(tables, json_file)
    bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ üòé")


def extract_grades():
    pass


def save():
    pass


def access_current_sheet():
    """ –û–±—Ä–∞—â–∞–µ–º—Å—è –∫ Google-—Ç–∞–±–ª–∏—Ü–µ """
    with open("tables.json") as json_file:
        tables = json.load(json_file)

    idsheet = tables[max(tables)]["id"]
    gc = gspread.service_account(filename="credentials.json")
    sh = gc.open_by_key(idsheet)
    worksheet = sh.sheet1
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º Google-—Ç–∞–±–ª–∏—Ü—É –≤ —Ç–∞–±–ª–∏—Ü—É pandas
    # df = pd.DataFrame(worksheet.get_all_records())
    return worksheet


def choose_action(message):
    """ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–µ–π—Å—Ç–≤–∏—è –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è """
    while True:
        if message.text == "–ü–æ–¥–∫–ª—é—á–∏—Ç—å Google-—Ç–∞–±–ª–∏—Ü—É":
            msg = bot.reply_to(message, "–ê –º–æ–∂–Ω–æ —Å—Å—ã–ª–æ—á–∫—É üëâüèªüëàüèª")
            bot.register_next_step_handler(msg, connect_table)
            break
        elif message.text == "–†–µ–¥–∞–∫—Ç–æ—Ä –ø—Ä–µ–¥–º–µ—Ç–æ–≤":
            subject_markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            subject_markup.row("–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç")
            subject_markup.row("–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç")
            subject_markup.row("–£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç")
            subject_markup.row("–£–¥–∞–ª–∏—Ç—å –≤—Å—ë")
            info = bot.send_message(message.chat.id, "–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏?", reply_markup=subject_markup)
            bot.register_next_step_handler(info, choose_subject_action)
            break
        elif message.text == "–†–µ–¥–∞–∫—Ç–æ—Ä –¥–µ–¥–ª–∞–π–Ω–æ–≤":
            worksheet = access_current_sheet()
            values_list = worksheet.col_values(1)[1:]
            markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            for i in values_list:
                markup.row(str(i))
            info = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç", reply_markup=markup)
            bot.register_next_step_handler(info, requesting_lab_number)
            break
        elif message.text == "–í—ã–≤–µ—Å—Ç–∏ –¥–µ–¥–ª–∞–π–Ω –Ω–∞ –Ω–µ–¥–µ–ª—é":
            worksheet = access_current_sheet()
            values_list = worksheet.col_values(1)[1:]
            text = ''
            for title in values_list:
                row_id = worksheet.find(title).row
                line = worksheet.row_values(row_id)[2:]
                line = list(filter(None, line))
                close_deadlines = []
                for date in line:
                    if convert_date(date):
                        close_deadlines.append(date)
                if len(close_deadlines) > 0:
                    text += title + " " + ", ".join(close_deadlines) + '\n'
            if text == '':
                info = bot.send_message(message.chat.id, "–î–µ–¥–ª–∞–π–Ω–æ–≤ –Ω–µ—Ç\n–û—Ç–¥—ã—Ö–∞–π")
            else:
                bot.send_message(message.chat.id, text)
                info = bot.send_message(message.chat.id, "–ü–æ–∫–∞–∑–∞–Ω—ã –≤—Å–µ –¥–µ–¥–ª–∞–π–Ω—ã –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–µ 7 –¥–Ω–µ–π")
            bot.register_next_step_handler(info, choose_action)
            break
        elif message.text == "–†–µ–¥–∞–∫—Ç–æ—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è":
            subject_markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            subject_markup.row("–°–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
            subject_markup.row("–ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
            subject_markup.row("–í—ã–≤–µ—Å—Ç–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
            info = bot.send_message(message.chat.id, "–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º?", reply_markup=subject_markup)
            bot.register_next_step_handler(info, choose_timetable_action)
            break

        info = bot.send_message(message.chat.id, "–¢—ã –ø–æ-–º–æ–µ–º—É –ø–µ—Ä–µ–ø—É—Ç–∞–ª")
        bot.send_photo(message.chat.id, "https://i.ytimg.com/vi/EI3lfljIZxE/maxresdefault.jpg")
        bot.register_next_step_handler(info, choose_action)
        break


def choose_timetable_action(message):
    while True:
        if message.text == "–°–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ":
            markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            markup.row("–°–æ—Å—Ç–∞–≤–∏—Ç—å")
            choice = bot.send_message(message.chat.id, "–¢—ã —É–≤–µ—Ä–µ–Ω –≤ —Å–≤–æ–∏—Ö –¥–µ–π—Å—Ç–≤–∏—è—Ö?", reply_markup=markup)
            bot.register_next_step_handler(choice, create_timetable)
            break
        if message.text == "–ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ":
            markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            markup.row("–°–æ—Å—Ç–∞–≤–∏—Ç—å")
            choice = bot.send_message(message.chat.id, "–ö–∞–∫–æ–π –¥–µ–Ω—å –º–µ–Ω—è—Ç—å?", reply_markup=markup)
            bot.register_next_step_handler(choice, change_timetable)
            break
        if message.text == "–í—ã–≤–µ—Å—Ç–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ":
            break
        info = bot.send_message(message.chat.id, "–¢—ã –ø–æ-–º–æ–µ–º—É –ø–µ—Ä–µ–ø—É—Ç–∞–ª")
        bot.send_photo(message.chat.id, "https://i.ytimg.com/vi/EI3lfljIZxE/maxresdefault.jpg")
        bot.register_next_step_handler(info, choose_timetable_action)
        break


def create_timetable(message):
    worksheet = access_current_sheet()
    for i in range(1, 8):
        worksheet.batch_clear([f"H{i}:O{i}"])
    lst = ["–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–≤—Ç–æ—Ä–Ω–∏–∫", "—Å—Ä–µ–¥–∞", "—á–µ—Ç–≤–µ—Ä–≥", "–ø—è—Ç–Ω–∏—Ü–∞"]
    for i in range(len(lst)):
        for j in range(1, 9):
            global coords
            coords = i, j
            markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            markup.row("–í–≤–µ—Å—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç")
            markup.row("–û–∫–Ω–æ")
            markup.row("–ü–∞—Ä –±–æ–ª—å—à–µ –Ω–µ—Ç")
            choice = bot.reply_to(message, f"{j} –ø–∞—Ä–∞, {lst[i]}, —É –Ω–∞—Å?", reply_markup=markup)
            bot.register_next_step_handler(choice, timetable_action)
            if coords == "–∫–æ–Ω–µ—Ü":
                break
            if coords == "–æ–∫–Ω–æ":
                continue
        if coords == "–∫–æ–Ω–µ—Ü":
            continue
            # worksheet.update_cell(i, j - 1, message.text)


def timetable_action(message):
    worksheet = access_current_sheet()
    while True:
        global coords
        if message.text == "–í–≤–µ—Å—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç":
            msg = bot.reply_to(message, "–ù—É —Ç–∞–∫ –≤–≤–æ–¥–∏ –µ–≥–æ")
            worksheet.update_cell(coords[0], coords[1], msg.text)
            break
        if message.text == "–û–∫–Ω–æ":
            coords = "–æ–∫–Ω–æ"
            break
        if message.text == "–°–µ–≥–æ–¥–Ω—è –ø–∞—Ä –±–æ–ª—å—à–µ –Ω–µ—Ç":
            coords = "–∫–æ–Ω–µ—Ü"
            break


def choose_subject_action(message):
    """ –í—ã–±–∏—Ä–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –≤ —Ä–∞–∑–¥–µ–ª–µ –†–µ–¥–∞–∫—Ç–æ—Ä –ø—Ä–µ–¥–º–µ—Ç–æ–≤ """
    while True:
        if message.text == "–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç":
            msg = bot.reply_to(message, "–í–≤–µ–¥–∏ –∏–º—è –ø—Ä–µ–¥–º–µ—Ç–∞")
            bot.register_next_step_handler(msg, add_new_subject)
            break
        elif message.text == "–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç":
            worksheet = access_current_sheet()
            values_list = worksheet.col_values(1)[1:]
            markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            for i in values_list:
                markup.row(str(i))
            updating = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç", reply_markup=markup)
            bot.register_next_step_handler(updating, update_subject)
            break
        elif message.text == "–£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç":
            worksheet = access_current_sheet()
            values_list = worksheet.col_values(1)[1:]
            markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            for i in values_list:
                markup.row(str(i))
            deleting = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç", reply_markup=markup)
            bot.register_next_step_handler(deleting, delete_subject)
            break
        elif message.text == "–£–¥–∞–ª–∏—Ç—å –≤—Å—ë":
            markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            markup.row("–£–¥–∞–ª–∏—Ç—å")
            choice = bot.send_message(message.chat.id, "–¢—ã —É–≤–µ—Ä–µ–Ω –≤ —Å–≤–æ–∏—Ö –¥–µ–π—Å—Ç–≤–∏—è—Ö?", reply_markup=markup)
            bot.register_next_step_handler(choice, clear_subject_list)
            break

        info = bot.send_message(message.chat.id, "–¢—ã –ø–æ-–º–æ–µ–º—É –ø–µ—Ä–µ–ø—É—Ç–∞–ª")
        bot.send_photo(message.chat.id, "https://i.ytimg.com/vi/EI3lfljIZxE/maxresdefault.jpg")
        bot.register_next_step_handler(info, choose_subject_action)
        break


def requesting_lab_number(message):
    """ –û–±–Ω–æ–≤–ª—è–µ–º –¥–µ–¥–ª–∞–π–Ω """
    while True:
        try:
            worksheet = access_current_sheet()
            global cell
            cell = worksheet.find(message.text)
            coords = cell.row, cell.col
            msg = bot.reply_to(message, '–£–∫–∞–∂–∏ –Ω–æ–º–µ—Ä —Ä–∞–±–æ—Ç—ã –æ—Ç 1 –¥–æ 5')
            bot.register_next_step_handler(msg, requesting_deadline_date)
            break
        except:
            pass

        info = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç –∏–∑ —Å–ø–∏—Å–∫–∞")
        bot.register_next_step_handler(info, requesting_lab_number)
        break


def requesting_deadline_date(message):
    """ –û–±–Ω–æ–≤–ª—è–µ–º –¥–µ–¥–ª–∞–π–Ω """
    while True:
        try:
            if 1 <= int(message.text) <= 5:
                global coords
                coords = cell.row, int(message.text) + 2
                msg = bot.reply_to(message, '–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ 01/01/01')
                bot.register_next_step_handler(msg, setting_deadline)
                break
            else:
                pass
        except ValueError:
            pass

        info = bot.send_message(message.chat.id, "–¢—ã –ø–æ-–º–æ–µ–º—É –ø–µ—Ä–µ–ø—É—Ç–∞–ª")
        bot.send_photo(message.chat.id, "https://i.ytimg.com/vi/EI3lfljIZxE/maxresdefault.jpg")
        bot.register_next_step_handler(info, requesting_deadline_date)
        break

def setting_deadline(message):
    """ –û–±–Ω–æ–≤–ª—è–µ–º –¥–µ–¥–ª–∞–π–Ω """
    worksheet = access_current_sheet()
    row, col = coords
    while True:
        try:
            datetime.strptime(message.text, '%d/%m/%y')
            dt = datetime.strptime(message.text, "%d/%m/%y")
            if dt + timedelta(days = 1) < datetime.today():
                info = bot.send_message(message.chat.id, "–ê –∑–∞—á–µ–º –ø—Ä–æ—à–µ–¥—à–∏–µ –¥–∞—Ç—ã-—Ç–æ —É–∫–∞–∑—ã–≤–∞—Ç—å?"
                                                         "\n–£–∫–∞–∂–∏ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ 01/01/01")
                bot.register_next_step_handler(info, setting_deadline)
                break
            else:
                worksheet.update_cell(row, col, message.text)
                worksheet.update_cell(row, col, message.text)
                bot.send_message(message.chat.id, "–î–µ–¥–ª–∞–π–Ω –¥–æ–±–∞–≤–ª–µ–Ω üòé")
                start_markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
                start_markup.row("–í—ã–≤–µ—Å—Ç–∏ –¥–µ–¥–ª–∞–π–Ω –Ω–∞ –Ω–µ–¥–µ–ª—é")
                start_markup.row("–†–µ–¥–∞–∫—Ç–æ—Ä –¥–µ–¥–ª–∞–π–Ω–æ–≤")
                start_markup.row("–†–µ–¥–∞–∫—Ç–æ—Ä –ø—Ä–µ–¥–º–µ—Ç–æ–≤")
                info = bot.send_message(message.chat.id, "–ß—Ç–æ –¥–µ–ª–∞—Ç—å –±—É–¥–µ–º?", reply_markup=start_markup)
                bot.register_next_step_handler(info, choose_action)
                break
        except ValueError:
            pass
        info = bot.send_message(message.chat.id, "–¢—ã –ø–æ-–º–æ–µ–º—É –ø–µ—Ä–µ–ø—É—Ç–∞–ª"
                                                 "\n–£–∫–∞–∂–∏ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ 01/01/00")
        bot.send_photo(message.chat.id, "https://i.ytimg.com/vi/EI3lfljIZxE/maxresdefault.jpg")
        bot.register_next_step_handler(info, setting_deadline)
        break


def add_new_subject(message):
    """ –í–Ω–æ—Å–∏–º –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ –≤ Google-—Ç–∞–±–ª–∏—Ü—É """
    global title
    title = ''
    title = message.text
    msg = bot.reply_to(message, '–£–∫–∞–∂–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç')
    bot.register_next_step_handler(msg, add_new_subject_url)


def add_new_subject_url(message):
    """ –í–Ω–æ—Å–∏–º –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–∞–±–ª–∏—Ü—É –ø—Ä–µ–¥–º–µ—Ç–∞ –≤ Google-—Ç–∞–±–ª–∏—Ü—É """
    while True:
        url = message.text
        if validators.url(url):
            worksheet = access_current_sheet()
            worksheet.append_row([title, url])
            bot.send_message(message.chat.id, "–î–æ–±–∞–≤–ª–µ–Ω—ã –ø—Ä–µ–¥–º–µ—Ç –∏ —É–∫–∞–∑–∞–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ üòé")
            start_markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            start_markup.row("–í—ã–≤–µ—Å—Ç–∏ –¥–µ–¥–ª–∞–π–Ω –Ω–∞ –Ω–µ–¥–µ–ª—é")
            start_markup.row("–†–µ–¥–∞–∫—Ç–æ—Ä –¥–µ–¥–ª–∞–π–Ω–æ–≤")
            start_markup.row("–†–µ–¥–∞–∫—Ç–æ—Ä –ø—Ä–µ–¥–º–µ—Ç–æ–≤")
            info = bot.send_message(message.chat.id, "–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?", reply_markup=start_markup)
            bot.register_next_step_handler(info, choose_action)
            break
        else:
            pass

        info = bot.send_message(message.chat.id, "–°—Å—ã–ª–∫–∞ –∫—Ä–∏–≤–∞—è, —É–∫–∞–∂–∏ –Ω–æ—Ä–º–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É")
        bot.register_next_step_handler(info, add_new_subject_url)
        break


def update_subject(message):
    """ –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–µ–¥–º–µ—Ç–µ –≤ Google-—Ç–∞–±–ª–∏—Ü–µ """
    while True:
        try:
            worksheet = access_current_sheet()
            global cell, coords
            cell = worksheet.find(message.text)
            coords = cell.row, cell.col
            msg = bot.reply_to(message, '–£–∫–∞–∂–∏ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ –∏ —Å—Å—ã–ª–∫—É –¥–∞–π')
            bot.register_next_step_handler(msg, subject_new_name)
            break
        except:
            pass

        info = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç –∏–∑ —Å–ø–∏—Å–∫–∞")
        bot.register_next_step_handler(info, update_subject)
        break


def subject_new_name(message):
    """ –í–Ω–æ—Å–∏–º –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ –≤ Google-—Ç–∞–±–ª–∏—Ü—É """
    while True:
        try:
            title, url = message.text.split()
            if validators.url(url):
                worksheet = access_current_sheet()
                row, col = coords
                worksheet.update_cell(row, col, title)
                worksheet.update_cell(row, col + 1, url)
                bot.send_message(message.chat.id, '–ü—Ä–µ–¥–º–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω üòé')
                start_markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
                start_markup.row("–í—ã–≤–µ—Å—Ç–∏ –¥–µ–¥–ª–∞–π–Ω –Ω–∞ –Ω–µ–¥–µ–ª—é")
                start_markup.row("–†–µ–¥–∞–∫—Ç–æ—Ä –¥–µ–¥–ª–∞–π–Ω–æ–≤")
                start_markup.row("–†–µ–¥–∞–∫—Ç–æ—Ä –ø—Ä–µ–¥–º–µ—Ç–æ–≤")
                info = bot.send_message(message.chat.id, "–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?", reply_markup=start_markup)
                bot.register_next_step_handler(info, choose_action)
                break
            else:
                pass

            info = bot.send_message(message.chat.id, "–ö—Ä–∏–≤–∞—è —Å—Å—ã–ª–∫–∞ –∫–∞–∫–∞—è-—Ç–æ, —É–∫–∞–∂–∏ –Ω–æ—Ä–º–∞–ª—å–Ω–æ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª ")
            bot.register_next_step_handler(info, subject_new_name)
            break
        except:
            info = bot.send_message(message.chat.id, "–¢—ã –ø–æ-–º–æ–µ–º—É –ø–µ—Ä–µ–ø—É—Ç–∞–ª, —É–∫–∞–∂–∏ –ø—Ä–µ–¥–º–µ—Ç –∏ —Å—Å—ã–ª–∫—É —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª")
            bot.send_photo(message.chat.id, "https://i.ytimg.com/vi/EI3lfljIZxE/maxresdefault.jpg")
            bot.register_next_step_handler(info, subject_new_name)
            break


def delete_subject(message):
    """ –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç –≤ Google-—Ç–∞–±–ª–∏—Ü–µ """
    while True:
        try:
            global cell
            worksheet = access_current_sheet()
            cell = worksheet.find(message.text)
            worksheet.delete_row(cell.row)
            bot.send_message(message.chat.id, '–ü—Ä–µ–¥–º–µ—Ç —É–¥–∞–ª—ë–Ω!')
            start_markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            start_markup.row("–í—ã–≤–µ—Å—Ç–∏ –¥–µ–¥–ª–∞–π–Ω –Ω–∞ –Ω–µ–¥–µ–ª—é")
            start_markup.row("–†–µ–¥–∞–∫—Ç–æ—Ä –¥–µ–¥–ª–∞–π–Ω–æ–≤")
            start_markup.row("–†–µ–¥–∞–∫—Ç–æ—Ä –ø—Ä–µ–¥–º–µ—Ç–æ–≤")
            info = bot.send_message(message.chat.id, "–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?", reply_markup=start_markup)
            bot.register_next_step_handler(info, choose_action)
            break
        except:
            pass

        info = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç –∏–∑ —Å–ø–∏—Å–∫–∞")
        bot.register_next_step_handler(info, delete_subject)
        break


def clear_subject_list(message):
    """ –£–¥–∞–ª—è–µ–º –≤—Å–µ –∏–∑ Google-—Ç–∞–±–ª–∏—Ü—ã """
    while True:
        if message.text == "–£–¥–∞–ª–∏—Ç—å":
            worksheet = access_current_sheet()
            values_list = worksheet.col_values(1)[1:]
            for i in values_list:
                worksheet.delete_row(2)
            bot.send_message(message.chat.id, '–¢–∞–±–ª–∏—Ü–∞ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∞ ‚ö∞')
            start_markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            start_markup.row("–í—ã–≤–µ—Å—Ç–∏ –¥–µ–¥–ª–∞–π–Ω –Ω–∞ –Ω–µ–¥–µ–ª—é")
            start_markup.row("–†–µ–¥–∞–∫—Ç–æ—Ä –¥–µ–¥–ª–∞–π–Ω–æ–≤")
            start_markup.row("–†–µ–¥–∞–∫—Ç–æ—Ä –ø—Ä–µ–¥–º–µ—Ç–æ–≤")
            info = bot.send_message(message.chat.id, "–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?", reply_markup=start_markup)
            bot.register_next_step_handler(info, choose_action)
            break
        else:
            pass

        info = bot.send_message(message.chat.id, "–î–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–∞–±–ª–∏—Ü—ã –≤–≤–µ–¥–∏ —Å–ª–æ–≤–æ '–£–¥–∞–ª–∏—Ç—å'")
        bot.register_next_step_handler(info, clear_subject_list)
        break


@bot.message_handler(commands=["start"])
def start(message):
    try:
        with open("tables.json") as json_file:
            start_markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            start_markup.row("–í—ã–≤–µ—Å—Ç–∏ –¥–µ–¥–ª–∞–π–Ω –Ω–∞ –Ω–µ–¥–µ–ª—é")
            start_markup.row("–†–µ–¥–∞–∫—Ç–æ—Ä –¥–µ–¥–ª–∞–π–Ω–æ–≤")
            start_markup.row("–†–µ–¥–∞–∫—Ç–æ—Ä –ø—Ä–µ–¥–º–µ—Ç–æ–≤")
            start_markup.row("–†–µ–¥–∞–∫—Ç–æ—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è")

            worksheet = access_current_sheet()
            values_list = worksheet.col_values(1)[1:]
            link_values_list = worksheet.col_values(2)[1:]
            text = ''
            for i in range(len(values_list)):
                link = link_values_list[i]
                text += "[" + str(values_list[i]) + "](" + link + ")" + '\n'
            if text != '':
                bot.send_message(message.chat.id, text, parse_mode='MarkdownV2', disable_web_page_preview=True)

            info = bot.send_message(message.chat.id, "–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?", reply_markup=start_markup)
            bot.register_next_step_handler(info, choose_action)

    except FileNotFoundError:
        start_markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        start_markup.row("–ü–æ–¥–∫–ª—é—á–∏—Ç—å Google-—Ç–∞–±–ª–∏—Ü—É")
        start_markup.row("–í—ã–≤–µ—Å—Ç–∏ –¥–µ–¥–ª–∞–π–Ω –Ω–∞ –Ω–µ–¥–µ–ª—é")
        start_markup.row("–†–µ–¥–∞–∫—Ç–æ—Ä –¥–µ–¥–ª–∞–π–Ω–æ–≤")
        start_markup.row("–†–µ–¥–∞–∫—Ç–æ—Ä –ø—Ä–µ–¥–º–µ—Ç–æ–≤")
        start_markup.row("–†–µ–¥–∞–∫—Ç–æ—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è")
        info = bot.send_message(message.chat.id, "–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?", reply_markup=start_markup)
        bot.register_next_step_handler(info, choose_action)

        worksheet = access_current_sheet()
        values_list = worksheet.col_values(1)[1:]
        link_values_list = worksheet.col_values(2)[1:]
        for i in range(len(values_list)):
            link = link_values_list[i]
            bot.send_message(message.chat.id, "[" + str(values_list[i]) + "](" + link + ")",
                             parse_mode='MarkdownV2')


bot.infinity_polling()